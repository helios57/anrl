#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertt_Daten(t_Daten instance);
    partial void Updatet_Daten(t_Daten instance);
    partial void Deletet_Daten(t_Daten instance);
    partial void Insertt_GPS_IN(t_GPS_IN instance);
    partial void Updatet_GPS_IN(t_GPS_IN instance);
    partial void Deletet_GPS_IN(t_GPS_IN instance);
    partial void Insertt_Log(t_Log instance);
    partial void Updatet_Log(t_Log instance);
    partial void Deletet_Log(t_Log instance);
    partial void Insertt_Pilot(t_Pilot instance);
    partial void Updatet_Pilot(t_Pilot instance);
    partial void Deletet_Pilot(t_Pilot instance);
    partial void Insertt_Polygon(t_Polygon instance);
    partial void Updatet_Polygon(t_Polygon instance);
    partial void Deletet_Polygon(t_Polygon instance);
    partial void Insertt_PolygonPoint(t_PolygonPoint instance);
    partial void Updatet_PolygonPoint(t_PolygonPoint instance);
    partial void Deletet_PolygonPoint(t_PolygonPoint instance);
    partial void Insertt_Race(t_Race instance);
    partial void Updatet_Race(t_Race instance);
    partial void Deletet_Race(t_Race instance);
    partial void Insertt_Tracker(t_Tracker instance);
    partial void Updatet_Tracker(t_Tracker instance);
    partial void Deletet_Tracker(t_Tracker instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatabaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<t_Daten> t_Datens
		{
			get
			{
				return this.GetTable<t_Daten>();
			}
		}
		
		public System.Data.Linq.Table<t_GPS_IN> t_GPS_INs
		{
			get
			{
				return this.GetTable<t_GPS_IN>();
			}
		}
		
		public System.Data.Linq.Table<t_Log> t_Logs
		{
			get
			{
				return this.GetTable<t_Log>();
			}
		}
		
		public System.Data.Linq.Table<t_Pilot> t_Pilots
		{
			get
			{
				return this.GetTable<t_Pilot>();
			}
		}
		
		public System.Data.Linq.Table<t_Polygon> t_Polygons
		{
			get
			{
				return this.GetTable<t_Polygon>();
			}
		}
		
		public System.Data.Linq.Table<t_PolygonPoint> t_PolygonPoints
		{
			get
			{
				return this.GetTable<t_PolygonPoint>();
			}
		}
		
		public System.Data.Linq.Table<t_Race> t_Races
		{
			get
			{
				return this.GetTable<t_Race>();
			}
		}
		
		public System.Data.Linq.Table<t_Tracker> t_Trackers
		{
			get
			{
				return this.GetTable<t_Tracker>();
			}
		}
	}
	
	[Table(Name="dbo.t_Daten")]
	public partial class t_Daten : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_Tracker;
		
		private System.DateTime _Timestamp;
		
		private decimal _Longitude;
		
		private decimal _Latitude;
		
		private decimal _Altitude;
		
		private decimal _Speed;
		
		private int _Penalty;
		
		private int _ID_Polygon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_TrackerChanging(int value);
    partial void OnID_TrackerChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnLongitudeChanging(decimal value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(decimal value);
    partial void OnLatitudeChanged();
    partial void OnAltitudeChanging(decimal value);
    partial void OnAltitudeChanged();
    partial void OnSpeedChanging(decimal value);
    partial void OnSpeedChanged();
    partial void OnPenaltyChanging(int value);
    partial void OnPenaltyChanged();
    partial void OnID_PolygonChanging(int value);
    partial void OnID_PolygonChanged();
    #endregion
		
		public t_Daten()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ID_Tracker", DbType="Int NOT NULL")]
		public int ID_Tracker
		{
			get
			{
				return this._ID_Tracker;
			}
			set
			{
				if ((this._ID_Tracker != value))
				{
					this.OnID_TrackerChanging(value);
					this.SendPropertyChanging();
					this._ID_Tracker = value;
					this.SendPropertyChanged("ID_Tracker");
					this.OnID_TrackerChanged();
				}
			}
		}
		
		[Column(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[Column(Storage="_Longitude", DbType="Decimal(24,18) NOT NULL")]
		public decimal Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Latitude", DbType="Decimal(24,18) NOT NULL")]
		public decimal Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Altitude", DbType="Decimal(24,18) NOT NULL")]
		public decimal Altitude
		{
			get
			{
				return this._Altitude;
			}
			set
			{
				if ((this._Altitude != value))
				{
					this.OnAltitudeChanging(value);
					this.SendPropertyChanging();
					this._Altitude = value;
					this.SendPropertyChanged("Altitude");
					this.OnAltitudeChanged();
				}
			}
		}
		
		[Column(Storage="_Speed", DbType="Decimal(24,18) NOT NULL")]
		public decimal Speed
		{
			get
			{
				return this._Speed;
			}
			set
			{
				if ((this._Speed != value))
				{
					this.OnSpeedChanging(value);
					this.SendPropertyChanging();
					this._Speed = value;
					this.SendPropertyChanged("Speed");
					this.OnSpeedChanged();
				}
			}
		}
		
		[Column(Storage="_Penalty", DbType="Int NOT NULL")]
		public int Penalty
		{
			get
			{
				return this._Penalty;
			}
			set
			{
				if ((this._Penalty != value))
				{
					this.OnPenaltyChanging(value);
					this.SendPropertyChanging();
					this._Penalty = value;
					this.SendPropertyChanged("Penalty");
					this.OnPenaltyChanged();
				}
			}
		}
		
		[Column(Storage="_ID_Polygon", DbType="Int NOT NULL")]
		public int ID_Polygon
		{
			get
			{
				return this._ID_Polygon;
			}
			set
			{
				if ((this._ID_Polygon != value))
				{
					this.OnID_PolygonChanging(value);
					this.SendPropertyChanging();
					this._ID_Polygon = value;
					this.SendPropertyChanged("ID_Polygon");
					this.OnID_PolygonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_GPS_IN")]
	public partial class t_GPS_IN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _IMEI;
		
		private int _Status;
		
		private int _GPS_fix;
		
		private System.DateTime _TimestampTracker;
		
		private string _longitude;
		
		private string _latitude;
		
		private string _altitude;
		
		private string _speed;
		
		private string _heading;
		
		private int _nr_used_sat;
		
		private string _HDOP;
		
		private System.DateTime _Timestamp;
		
		private bool _Processed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIMEIChanging(string value);
    partial void OnIMEIChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnGPS_fixChanging(int value);
    partial void OnGPS_fixChanged();
    partial void OnTimestampTrackerChanging(System.DateTime value);
    partial void OnTimestampTrackerChanged();
    partial void OnlongitudeChanging(string value);
    partial void OnlongitudeChanged();
    partial void OnlatitudeChanging(string value);
    partial void OnlatitudeChanged();
    partial void OnaltitudeChanging(string value);
    partial void OnaltitudeChanged();
    partial void OnspeedChanging(string value);
    partial void OnspeedChanged();
    partial void OnheadingChanging(string value);
    partial void OnheadingChanged();
    partial void Onnr_used_satChanging(int value);
    partial void Onnr_used_satChanged();
    partial void OnHDOPChanging(string value);
    partial void OnHDOPChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnProcessedChanging(bool value);
    partial void OnProcessedChanged();
    #endregion
		
		public t_GPS_IN()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_IMEI", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string IMEI
		{
			get
			{
				return this._IMEI;
			}
			set
			{
				if ((this._IMEI != value))
				{
					this.OnIMEIChanging(value);
					this.SendPropertyChanging();
					this._IMEI = value;
					this.SendPropertyChanged("IMEI");
					this.OnIMEIChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_GPS_fix", DbType="Int NOT NULL")]
		public int GPS_fix
		{
			get
			{
				return this._GPS_fix;
			}
			set
			{
				if ((this._GPS_fix != value))
				{
					this.OnGPS_fixChanging(value);
					this.SendPropertyChanging();
					this._GPS_fix = value;
					this.SendPropertyChanged("GPS_fix");
					this.OnGPS_fixChanged();
				}
			}
		}
		
		[Column(Storage="_TimestampTracker", DbType="DateTime NOT NULL")]
		public System.DateTime TimestampTracker
		{
			get
			{
				return this._TimestampTracker;
			}
			set
			{
				if ((this._TimestampTracker != value))
				{
					this.OnTimestampTrackerChanging(value);
					this.SendPropertyChanging();
					this._TimestampTracker = value;
					this.SendPropertyChanged("TimestampTracker");
					this.OnTimestampTrackerChanged();
				}
			}
		}
		
		[Column(Storage="_longitude", DbType="NChar(12) NOT NULL", CanBeNull=false)]
		public string longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_latitude", DbType="NChar(12) NOT NULL", CanBeNull=false)]
		public string latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_altitude", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string altitude
		{
			get
			{
				return this._altitude;
			}
			set
			{
				if ((this._altitude != value))
				{
					this.OnaltitudeChanging(value);
					this.SendPropertyChanging();
					this._altitude = value;
					this.SendPropertyChanged("altitude");
					this.OnaltitudeChanged();
				}
			}
		}
		
		[Column(Storage="_speed", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string speed
		{
			get
			{
				return this._speed;
			}
			set
			{
				if ((this._speed != value))
				{
					this.OnspeedChanging(value);
					this.SendPropertyChanging();
					this._speed = value;
					this.SendPropertyChanged("speed");
					this.OnspeedChanged();
				}
			}
		}
		
		[Column(Storage="_heading", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string heading
		{
			get
			{
				return this._heading;
			}
			set
			{
				if ((this._heading != value))
				{
					this.OnheadingChanging(value);
					this.SendPropertyChanging();
					this._heading = value;
					this.SendPropertyChanged("heading");
					this.OnheadingChanged();
				}
			}
		}
		
		[Column(Storage="_nr_used_sat", DbType="Int NOT NULL")]
		public int nr_used_sat
		{
			get
			{
				return this._nr_used_sat;
			}
			set
			{
				if ((this._nr_used_sat != value))
				{
					this.Onnr_used_satChanging(value);
					this.SendPropertyChanging();
					this._nr_used_sat = value;
					this.SendPropertyChanged("nr_used_sat");
					this.Onnr_used_satChanged();
				}
			}
		}
		
		[Column(Storage="_HDOP", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string HDOP
		{
			get
			{
				return this._HDOP;
			}
			set
			{
				if ((this._HDOP != value))
				{
					this.OnHDOPChanging(value);
					this.SendPropertyChanging();
					this._HDOP = value;
					this.SendPropertyChanged("HDOP");
					this.OnHDOPChanged();
				}
			}
		}
		
		[Column(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[Column(Storage="_Processed", DbType="Bit NOT NULL")]
		public bool Processed
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this.OnProcessedChanging(value);
					this.SendPropertyChanging();
					this._Processed = value;
					this.SendPropertyChanged("Processed");
					this.OnProcessedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_Log")]
	public partial class t_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _timestamp;
		
		private int _level;
		
		private string _project;
		
		private string _Text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntimestampChanging(System.DateTime value);
    partial void OntimestampChanged();
    partial void OnlevelChanging(int value);
    partial void OnlevelChanged();
    partial void OnprojectChanging(string value);
    partial void OnprojectChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public t_Log()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[Column(Name="[level]", Storage="_level", DbType="Int NOT NULL")]
		public int level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[Column(Storage="_project", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string project
		{
			get
			{
				return this._project;
			}
			set
			{
				if ((this._project != value))
				{
					this.OnprojectChanging(value);
					this.SendPropertyChanging();
					this._project = value;
					this.SendPropertyChanged("project");
					this.OnprojectChanged();
				}
			}
		}
		
		[Column(Storage="_Text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_Pilot")]
	public partial class t_Pilot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LastName;
		
		private string _SureName;
		
		private int _ID_Tracker;
		
		private string _Color;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSureNameChanging(string value);
    partial void OnSureNameChanged();
    partial void OnID_TrackerChanging(int value);
    partial void OnID_TrackerChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    #endregion
		
		public t_Pilot()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_SureName", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string SureName
		{
			get
			{
				return this._SureName;
			}
			set
			{
				if ((this._SureName != value))
				{
					this.OnSureNameChanging(value);
					this.SendPropertyChanging();
					this._SureName = value;
					this.SendPropertyChanged("SureName");
					this.OnSureNameChanged();
				}
			}
		}
		
		[Column(Storage="_ID_Tracker", DbType="Int NOT NULL")]
		public int ID_Tracker
		{
			get
			{
				return this._ID_Tracker;
			}
			set
			{
				if ((this._ID_Tracker != value))
				{
					this.OnID_TrackerChanging(value);
					this.SendPropertyChanging();
					this._ID_Tracker = value;
					this.SendPropertyChanged("ID_Tracker");
					this.OnID_TrackerChanged();
				}
			}
		}
		
		[Column(Storage="_Color", DbType="NChar(10)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_Polygon")]
	public partial class t_Polygon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public t_Polygon()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_PolygonPoints")]
	public partial class t_PolygonPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private decimal _longitude;
		
		private decimal _latitude;
		
		private decimal _altitude;
		
		private int _ID_Polygon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnlongitudeChanging(decimal value);
    partial void OnlongitudeChanged();
    partial void OnlatitudeChanging(decimal value);
    partial void OnlatitudeChanged();
    partial void OnaltitudeChanging(decimal value);
    partial void OnaltitudeChanged();
    partial void OnID_PolygonChanging(int value);
    partial void OnID_PolygonChanged();
    #endregion
		
		public t_PolygonPoint()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_longitude", DbType="Decimal(24,14) NOT NULL")]
		public decimal longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_latitude", DbType="Decimal(24,14) NOT NULL")]
		public decimal latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_altitude", DbType="Decimal(24,14) NOT NULL")]
		public decimal altitude
		{
			get
			{
				return this._altitude;
			}
			set
			{
				if ((this._altitude != value))
				{
					this.OnaltitudeChanging(value);
					this.SendPropertyChanging();
					this._altitude = value;
					this.SendPropertyChanged("altitude");
					this.OnaltitudeChanged();
				}
			}
		}
		
		[Column(Storage="_ID_Polygon", DbType="Int NOT NULL")]
		public int ID_Polygon
		{
			get
			{
				return this._ID_Polygon;
			}
			set
			{
				if ((this._ID_Polygon != value))
				{
					this.OnID_PolygonChanging(value);
					this.SendPropertyChanging();
					this._ID_Polygon = value;
					this.SendPropertyChanged("ID_Polygon");
					this.OnID_PolygonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_Race")]
	public partial class t_Race : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ID_Pilot_0;
		
		private System.Nullable<int> _ID_Pilot_1;
		
		private System.Nullable<int> _ID_Pilot_2;
		
		private System.Nullable<int> _ID_Pilot_3;
		
		private System.Nullable<int> _ID_Polygon;
		
		private System.Nullable<System.DateTime> _TimeStart;
		
		private System.Nullable<System.DateTime> _TimeEnd;
		
		private System.Nullable<int> _ID_StartGate_0;
		
		private System.Nullable<int> _ID_StartGate_1;
		
		private System.Nullable<int> _ID_StartGate_2;
		
		private System.Nullable<int> _ID_StartGate_3;
		
		private System.Nullable<int> _ID_EndGate_0;
		
		private System.Nullable<int> _ID_EndGate_1;
		
		private System.Nullable<int> _ID_EndGate_2;
		
		private System.Nullable<int> _ID_EndGate_3;
		
		private System.Nullable<int> _ID_GoalLine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnID_Pilot_0Changing(System.Nullable<int> value);
    partial void OnID_Pilot_0Changed();
    partial void OnID_Pilot_1Changing(System.Nullable<int> value);
    partial void OnID_Pilot_1Changed();
    partial void OnID_Pilot_2Changing(System.Nullable<int> value);
    partial void OnID_Pilot_2Changed();
    partial void OnID_Pilot_3Changing(System.Nullable<int> value);
    partial void OnID_Pilot_3Changed();
    partial void OnID_PolygonChanging(System.Nullable<int> value);
    partial void OnID_PolygonChanged();
    partial void OnTimeStartChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStartChanged();
    partial void OnTimeEndChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeEndChanged();
    partial void OnID_StartGate_0Changing(System.Nullable<int> value);
    partial void OnID_StartGate_0Changed();
    partial void OnID_StartGate_1Changing(System.Nullable<int> value);
    partial void OnID_StartGate_1Changed();
    partial void OnID_StartGate_2Changing(System.Nullable<int> value);
    partial void OnID_StartGate_2Changed();
    partial void OnID_StartGate_3Changing(System.Nullable<int> value);
    partial void OnID_StartGate_3Changed();
    partial void OnID_EndGate_0Changing(System.Nullable<int> value);
    partial void OnID_EndGate_0Changed();
    partial void OnID_EndGate_1Changing(System.Nullable<int> value);
    partial void OnID_EndGate_1Changed();
    partial void OnID_EndGate_2Changing(System.Nullable<int> value);
    partial void OnID_EndGate_2Changed();
    partial void OnID_EndGate_3Changing(System.Nullable<int> value);
    partial void OnID_EndGate_3Changed();
    partial void OnID_GoalLineChanging(System.Nullable<int> value);
    partial void OnID_GoalLineChanged();
    #endregion
		
		public t_Race()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_ID_Pilot_0", DbType="Int")]
		public System.Nullable<int> ID_Pilot_0
		{
			get
			{
				return this._ID_Pilot_0;
			}
			set
			{
				if ((this._ID_Pilot_0 != value))
				{
					this.OnID_Pilot_0Changing(value);
					this.SendPropertyChanging();
					this._ID_Pilot_0 = value;
					this.SendPropertyChanged("ID_Pilot_0");
					this.OnID_Pilot_0Changed();
				}
			}
		}
		
		[Column(Storage="_ID_Pilot_1", DbType="Int")]
		public System.Nullable<int> ID_Pilot_1
		{
			get
			{
				return this._ID_Pilot_1;
			}
			set
			{
				if ((this._ID_Pilot_1 != value))
				{
					this.OnID_Pilot_1Changing(value);
					this.SendPropertyChanging();
					this._ID_Pilot_1 = value;
					this.SendPropertyChanged("ID_Pilot_1");
					this.OnID_Pilot_1Changed();
				}
			}
		}
		
		[Column(Storage="_ID_Pilot_2", DbType="Int")]
		public System.Nullable<int> ID_Pilot_2
		{
			get
			{
				return this._ID_Pilot_2;
			}
			set
			{
				if ((this._ID_Pilot_2 != value))
				{
					this.OnID_Pilot_2Changing(value);
					this.SendPropertyChanging();
					this._ID_Pilot_2 = value;
					this.SendPropertyChanged("ID_Pilot_2");
					this.OnID_Pilot_2Changed();
				}
			}
		}
		
		[Column(Storage="_ID_Pilot_3", DbType="Int")]
		public System.Nullable<int> ID_Pilot_3
		{
			get
			{
				return this._ID_Pilot_3;
			}
			set
			{
				if ((this._ID_Pilot_3 != value))
				{
					this.OnID_Pilot_3Changing(value);
					this.SendPropertyChanging();
					this._ID_Pilot_3 = value;
					this.SendPropertyChanged("ID_Pilot_3");
					this.OnID_Pilot_3Changed();
				}
			}
		}
		
		[Column(Storage="_ID_Polygon", DbType="Int")]
		public System.Nullable<int> ID_Polygon
		{
			get
			{
				return this._ID_Polygon;
			}
			set
			{
				if ((this._ID_Polygon != value))
				{
					this.OnID_PolygonChanging(value);
					this.SendPropertyChanging();
					this._ID_Polygon = value;
					this.SendPropertyChanged("ID_Polygon");
					this.OnID_PolygonChanged();
				}
			}
		}
		
		[Column(Storage="_TimeStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStart
		{
			get
			{
				return this._TimeStart;
			}
			set
			{
				if ((this._TimeStart != value))
				{
					this.OnTimeStartChanging(value);
					this.SendPropertyChanging();
					this._TimeStart = value;
					this.SendPropertyChanged("TimeStart");
					this.OnTimeStartChanged();
				}
			}
		}
		
		[Column(Storage="_TimeEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[Column(Storage="_ID_StartGate_0", DbType="Int")]
		public System.Nullable<int> ID_StartGate_0
		{
			get
			{
				return this._ID_StartGate_0;
			}
			set
			{
				if ((this._ID_StartGate_0 != value))
				{
					this.OnID_StartGate_0Changing(value);
					this.SendPropertyChanging();
					this._ID_StartGate_0 = value;
					this.SendPropertyChanged("ID_StartGate_0");
					this.OnID_StartGate_0Changed();
				}
			}
		}
		
		[Column(Storage="_ID_StartGate_1", DbType="Int")]
		public System.Nullable<int> ID_StartGate_1
		{
			get
			{
				return this._ID_StartGate_1;
			}
			set
			{
				if ((this._ID_StartGate_1 != value))
				{
					this.OnID_StartGate_1Changing(value);
					this.SendPropertyChanging();
					this._ID_StartGate_1 = value;
					this.SendPropertyChanged("ID_StartGate_1");
					this.OnID_StartGate_1Changed();
				}
			}
		}
		
		[Column(Storage="_ID_StartGate_2", DbType="Int")]
		public System.Nullable<int> ID_StartGate_2
		{
			get
			{
				return this._ID_StartGate_2;
			}
			set
			{
				if ((this._ID_StartGate_2 != value))
				{
					this.OnID_StartGate_2Changing(value);
					this.SendPropertyChanging();
					this._ID_StartGate_2 = value;
					this.SendPropertyChanged("ID_StartGate_2");
					this.OnID_StartGate_2Changed();
				}
			}
		}
		
		[Column(Storage="_ID_StartGate_3", DbType="Int")]
		public System.Nullable<int> ID_StartGate_3
		{
			get
			{
				return this._ID_StartGate_3;
			}
			set
			{
				if ((this._ID_StartGate_3 != value))
				{
					this.OnID_StartGate_3Changing(value);
					this.SendPropertyChanging();
					this._ID_StartGate_3 = value;
					this.SendPropertyChanged("ID_StartGate_3");
					this.OnID_StartGate_3Changed();
				}
			}
		}
		
		[Column(Storage="_ID_EndGate_0", DbType="Int")]
		public System.Nullable<int> ID_EndGate_0
		{
			get
			{
				return this._ID_EndGate_0;
			}
			set
			{
				if ((this._ID_EndGate_0 != value))
				{
					this.OnID_EndGate_0Changing(value);
					this.SendPropertyChanging();
					this._ID_EndGate_0 = value;
					this.SendPropertyChanged("ID_EndGate_0");
					this.OnID_EndGate_0Changed();
				}
			}
		}
		
		[Column(Storage="_ID_EndGate_1", DbType="Int")]
		public System.Nullable<int> ID_EndGate_1
		{
			get
			{
				return this._ID_EndGate_1;
			}
			set
			{
				if ((this._ID_EndGate_1 != value))
				{
					this.OnID_EndGate_1Changing(value);
					this.SendPropertyChanging();
					this._ID_EndGate_1 = value;
					this.SendPropertyChanged("ID_EndGate_1");
					this.OnID_EndGate_1Changed();
				}
			}
		}
		
		[Column(Storage="_ID_EndGate_2", DbType="Int")]
		public System.Nullable<int> ID_EndGate_2
		{
			get
			{
				return this._ID_EndGate_2;
			}
			set
			{
				if ((this._ID_EndGate_2 != value))
				{
					this.OnID_EndGate_2Changing(value);
					this.SendPropertyChanging();
					this._ID_EndGate_2 = value;
					this.SendPropertyChanged("ID_EndGate_2");
					this.OnID_EndGate_2Changed();
				}
			}
		}
		
		[Column(Storage="_ID_EndGate_3", DbType="Int")]
		public System.Nullable<int> ID_EndGate_3
		{
			get
			{
				return this._ID_EndGate_3;
			}
			set
			{
				if ((this._ID_EndGate_3 != value))
				{
					this.OnID_EndGate_3Changing(value);
					this.SendPropertyChanging();
					this._ID_EndGate_3 = value;
					this.SendPropertyChanged("ID_EndGate_3");
					this.OnID_EndGate_3Changed();
				}
			}
		}
		
		[Column(Storage="_ID_GoalLine", DbType="Int")]
		public System.Nullable<int> ID_GoalLine
		{
			get
			{
				return this._ID_GoalLine;
			}
			set
			{
				if ((this._ID_GoalLine != value))
				{
					this.OnID_GoalLineChanging(value);
					this.SendPropertyChanging();
					this._ID_GoalLine = value;
					this.SendPropertyChanged("ID_GoalLine");
					this.OnID_GoalLineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_Tracker")]
	public partial class t_Tracker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _IMEI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIMEIChanging(string value);
    partial void OnIMEIChanged();
    #endregion
		
		public t_Tracker()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_IMEI", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string IMEI
		{
			get
			{
				return this._IMEI;
			}
			set
			{
				if ((this._IMEI != value))
				{
					this.OnIMEIChanging(value);
					this.SendPropertyChanging();
					this._IMEI = value;
					this.SendPropertyChanged("IMEI");
					this.OnIMEIChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
